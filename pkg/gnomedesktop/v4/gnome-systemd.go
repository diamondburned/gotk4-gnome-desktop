// Code generated by girgen. DO NOT EDIT.

package gnomedesktop

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gerror"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gio/v2"
)

// #include <stdlib.h>
import "C"

// StartSystemdScopeFinish: finish an asynchronous operation to create a
// transient scope that was started with gnome_start_systemd_scope().
//
// Note that a successful return code does not imply that a unit has been
// created. It solely means that no error condition was hit sending the request.
//
// The function takes the following parameters:
//
//   - res: Result.
//
func StartSystemdScopeFinish(res gio.AsyncResulter) error {
	var _arg1 *C.GAsyncResult // out
	var _cerr *C.GError       // in

	_arg1 = (*C.GAsyncResult)(unsafe.Pointer(coreglib.InternObject(res).Native()))

	C.gnome_start_systemd_scope_finish(_arg1, &_cerr)
	runtime.KeepAlive(res)

	var _goerr error // out

	if _cerr != nil {
		_goerr = gerror.Take(unsafe.Pointer(_cerr))
	}

	return _goerr
}
