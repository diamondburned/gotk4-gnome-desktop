// Code generated by girgen. DO NOT EDIT.

package gnomedesktop

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
import "C"

//export _gotk4_gnomedesktop3_IdleMonitorWatchFunc
func _gotk4_gnomedesktop3_IdleMonitorWatchFunc(arg1 *C.GnomeIdleMonitor, arg2 C.guint, arg3 C.gpointer) {
	var fn IdleMonitorWatchFunc
	{
		v := gbox.Get(uintptr(arg3))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(IdleMonitorWatchFunc)
	}

	var _monitor *IdleMonitor // out
	var _id uint              // out

	_monitor = wrapIdleMonitor(coreglib.Take(unsafe.Pointer(arg1)))
	_id = uint(arg2)

	fn(_monitor, _id)
}
